import asyncio
from aiogram import Router, types, Bot
from aiogram.filters import Command
import KeyBord.Keybord as Keybord
import req.req as req
import db.db as db

router = Router()
push_called = False


@router.message(Command("start"))
async def start(message: types.Message):
    global push_called
    login = message.from_user.username
    chat = message.chat.id
    user = message.from_user.first_name
    send_message = (
    f'''ü§ñ–ü—Ä–∏–≤–µ—Ç, {user}!\n'''
    '''–≠—Ç–æ—Ç –±–æ—Ç –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π üî• SPRT-service üî•\n\n'''
    '''‚ÑπÔ∏è –ë–æ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Ç–æ–º—É, –∫—Ç–æ –Ω–∞—á–∞–ª –¥–∏–∞–ª–æ–≥ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫–∏. –ï—Å–ª–∏ –±–æ—Ç –º–æ–ª—á–∏—Ç ‚Äî —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.\n'''
    '''–ß—Ç–æ–±—ã –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å, –Ω–∞–∂–º–∏—Ç–µ /start@tp_sprt_bot.\n\n'''
    '''üè† –î–ª—è –Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é ‚§µÔ∏è'''
)

    if not push_called:
        asyncio.create_task(req.loop_push())
        push_called = True
    new_user = await db.find_new_user(login)
    
    
    if new_user == True:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–æ–≤—ã–π –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        if message.chat.type == "group" or "supergroup":
            await message.answer(f"–°–Ω–∞—á–∞–ª–∞ –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å —á–µ—Ä–µ–∑ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è https://t.me/tp_sprt_bot")
        else:
            write_user = await db.find_telegram(login, chat)
            if write_user == False:
                send_message = (
                    '''ü§î –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –º—ã –Ω–µ —Å–º–æ–≥–ª–∏ –Ω–∞–π—Ç–∏ —Å–≤—è–∑–∞–Ω–Ω–æ–π —É—á—ë—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏.\n\n'''
                    '''–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–∞—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ –Ω–µ —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å –∫–æ–º–ø–∞–Ω–∏–µ–π, —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ üí™  —Ä–∞—Å—Å–º–æ—Ç—Ä—è—Ç –µ–≥–æ –≤ –æ–±—â–µ–º –ø–æ—Ä—è–¥–∫–µ.\n\n'''
                    '''‚ÑπÔ∏è –ï—Å–ª–∏ –≤—ã —Å–≤—è–∑–∞–Ω—ã —Å –∫–∞–∫–∏–º –ª–∏–±–æ –∫–ª–∏–µ–Ω—Ç–æ–º SPRT - –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∂–∏—Ç–µ —ç—Ç–æ –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ –∑–∞—è–≤–∫–∏, –º—ã –¥–æ–±–∞–≤–∏–º –≤–∞—Å –≤ –Ω—É–∂–Ω—É—é –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é.\n\n''')
                await message.answer(send_message, reply_markup=Keybord.contact_kb)
    else:
        auth = await db.auth(login)
        if auth == 0:
            key = await db.key(login)
            if key == 0:
                await message.answer(send_message, reply_markup=Keybord.main_kb_key)
            else:
                await message.answer(send_message, reply_markup=Keybord.main_kb)
        else:
            await message.answer(send_message, reply_markup=Keybord.main_kb_unauth)



@router.message(Command("refresh"))
async def start(message: types.Message):
    if message.chat.type == "group":
        await message.answer(f"–≠—Ç–æ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö —Å –±–æ—Ç–æ–º")
    else:
        number = await message.answer("–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –∫–æ–Ω—Ç–∞–∫—Ç–æ–º –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö", reply_markup=Keybord.refresh_contact_kb)

